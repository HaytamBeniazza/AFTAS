services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aftas-postgres
    environment:
      POSTGRES_DB: aftas_db
      POSTGRES_USER: aftas_user
      POSTGRES_PASSWORD: aftas_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aftas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aftas_user -d aftas_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: aftas-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/aftas_db
      SPRING_DATASOURCE_USERNAME: aftas_user
      SPRING_DATASOURCE_PASSWORD: aftas_password
      JWT_SECRET: your-super-secret-jwt-key-for-production
      CORS_ALLOWED_ORIGINS: http://localhost:4200,http://frontend:80
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aftas-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Angular Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: aftas-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - aftas-network
    environment:
      API_BASE_URL: http://backend:8080/api

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aftas-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aftas.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - aftas-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  aftas-network:
    driver: bridge 